// Code generated by generator-core; DO NOT EDIT.
package collateral_adapter_strk

import (
	"fmt"
	"github.com/NethermindEth/juno/core/felt"
	"github.com/Tsisar/starknet-indexer/internal/types"
)

func DecodePaused(keys, data []*felt.Felt) (interface{}, error) {
	if len(data) != 1 {
		return nil, fmt.Errorf("expected 1 data fields, got %d", len(data))
	}

	return Paused{
		Data: PausedData{
			Account: types.NewAddress(data[0]),
		},
	}, nil
}

func DecodeUnpaused(keys, data []*felt.Felt) (interface{}, error) {
	if len(data) != 1 {
		return nil, fmt.Errorf("expected 1 data fields, got %d", len(data))
	}

	return Unpaused{
		Data: UnpausedData{
			Account: types.NewAddress(data[0]),
		},
	}, nil
}

func DecodeLogDeposit(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 2 {
		return nil, fmt.Errorf("expected 2 keys, got %d", len(keys))
	}
	if len(data) != 2 {
		return nil, fmt.Errorf("expected 2 data fields, got %d", len(data))
	}

	return LogDeposit{
		Key: LogDepositKey{
			Caller:          types.NewAddress(keys[0]),
			PositionAddress: types.NewAddress(keys[1]),
		},
		Data: LogDepositData{
			Amount: types.U256{
				Low:  data[0].String(),
				High: data[1].String(),
			},
		},
	}, nil
}

func DecodeLogWithdraw(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 2 {
		return nil, fmt.Errorf("expected 2 keys, got %d", len(keys))
	}
	if len(data) != 2 {
		return nil, fmt.Errorf("expected 2 data fields, got %d", len(data))
	}

	return LogWithdraw{
		Key: LogWithdrawKey{
			Caller:          types.NewAddress(keys[0]),
			PositionAddress: types.NewAddress(keys[1]),
		},
		Data: LogWithdrawData{
			Amount: types.U256{
				Low:  data[0].String(),
				High: data[1].String(),
			},
		},
	}, nil
}

func DecodeLogAddToWhitelist(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 1 {
		return nil, fmt.Errorf("expected 1 keys, got %d", len(keys))
	}

	return LogAddToWhitelist{
		Key: LogAddToWhitelistKey{
			User: types.NewAddress(keys[0]),
		},
	}, nil
}

func DecodeLogRemoveFromWhitelist(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 1 {
		return nil, fmt.Errorf("expected 1 keys, got %d", len(keys))
	}

	return LogRemoveFromWhitelist{
		Key: LogRemoveFromWhitelistKey{
			User: types.NewAddress(keys[0]),
		},
	}, nil
}

func DecodeLogEmergencyWithdraw(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 2 {
		return nil, fmt.Errorf("expected 2 keys, got %d", len(keys))
	}
	if len(data) != 2 {
		return nil, fmt.Errorf("expected 2 data fields, got %d", len(data))
	}

	return LogEmergencyWithdraw{
		Key: LogEmergencyWithdrawKey{
			Caller: types.NewAddress(keys[0]),
			To:     types.NewAddress(keys[1]),
		},
		Data: LogEmergencyWithdrawData{
			Amount: types.U256{
				Low:  data[0].String(),
				High: data[1].String(),
			},
		},
	}, nil
}

func DecodeLogCage(keys, data []*felt.Felt) (interface{}, error) {

	return LogCage{}, nil
}

var Decoders = map[string]types.EventDecoderWithMeta{
	"0x2eb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90": {Func: DecodePaused, Name: "stablecoin::components::pausable::PausableComponent::Paused"},
	"0xece5baf71f670bcb771481fd7bd9efd6d6b8053246fe67b5a13db8bf5f50f1":  {Func: DecodeUnpaused, Name: "stablecoin::components::pausable::PausableComponent::Unpaused"},
	"0x31b097cc1e52b3ccdf473dbb16a0fb02676cb54d6e821d1fb8e92a06181676f": {Func: DecodeLogDeposit, Name: "stablecoin::core::adapters::collateral_token_adapter::CollateralTokenAdapter::LogDeposit"},
	"0x280d24f9e38b9cc608a5a448a83ae6e1ffff10aef6464a56ca067a5470b8f35": {Func: DecodeLogWithdraw, Name: "stablecoin::core::adapters::collateral_token_adapter::CollateralTokenAdapter::LogWithdraw"},
	"0x1338d8637e5f1d9f0538699896d04ece348accfaac81d0924f421b1cfbfdfec": {Func: DecodeLogAddToWhitelist, Name: "stablecoin::core::adapters::collateral_token_adapter::CollateralTokenAdapter::LogAddToWhitelist"},
	"0x32176b0461878b055af0a933e1c41f4a0d653a05fd879ca66fc1f39baa2f79":  {Func: DecodeLogRemoveFromWhitelist, Name: "stablecoin::core::adapters::collateral_token_adapter::CollateralTokenAdapter::LogRemoveFromWhitelist"},
	"0xf0f9e47278ee6a5b3461c0e2e531948d3884a2be5f9416ab2c48874209aff3":  {Func: DecodeLogEmergencyWithdraw, Name: "stablecoin::core::adapters::collateral_token_adapter::CollateralTokenAdapter::LogEmergencyWithdraw"},
	"0x75ef26d8af3732b337ded7c33086749b36a2c1ec660f2de592fe60717edfd":   {Func: DecodeLogCage, Name: "stablecoin::core::adapters::collateral_token_adapter::CollateralTokenAdapter::LogCage"},
}
