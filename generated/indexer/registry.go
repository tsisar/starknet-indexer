// Code generated by generator-core; DO NOT EDIT.

package generated

import (
	"github.com/tsisar/starknet-indexer/generated/indexer/access_control_config"
	"github.com/tsisar/starknet-indexer/generated/indexer/access_control_manager"
	"github.com/tsisar/starknet-indexer/generated/indexer/admin_controls"
	"github.com/tsisar/starknet-indexer/generated/indexer/aggregator_factory"
	"github.com/tsisar/starknet-indexer/generated/indexer/aggregator_strk"
	"github.com/tsisar/starknet-indexer/generated/indexer/aggregator_wbtc"
	"github.com/tsisar/starknet-indexer/generated/indexer/aggregators_registry"
	"github.com/tsisar/starknet-indexer/generated/indexer/bookkeeper"
	"github.com/tsisar/starknet-indexer/generated/indexer/collateral_adapter_eth"
	"github.com/tsisar/starknet-indexer/generated/indexer/collateral_adapter_strk"
	"github.com/tsisar/starknet-indexer/generated/indexer/collateral_adapter_wbtc"
	"github.com/tsisar/starknet-indexer/generated/indexer/collateral_pool_config"
	"github.com/tsisar/starknet-indexer/generated/indexer/factory"
	"github.com/tsisar/starknet-indexer/generated/indexer/liquidation_engine"
	"github.com/tsisar/starknet-indexer/generated/indexer/liquidation_strategy"
	"github.com/tsisar/starknet-indexer/generated/indexer/nodes_registry"
	"github.com/tsisar/starknet-indexer/generated/indexer/position_manager"
	"github.com/tsisar/starknet-indexer/generated/indexer/pragma_price_oracle_eth"
	"github.com/tsisar/starknet-indexer/generated/indexer/price_consumer"
	"github.com/tsisar/starknet-indexer/generated/indexer/price_feed_eth"
	"github.com/tsisar/starknet-indexer/generated/indexer/price_feed_strk"
	"github.com/tsisar/starknet-indexer/generated/indexer/price_feed_wbtc"
	"github.com/tsisar/starknet-indexer/generated/indexer/show_stopper"
	"github.com/tsisar/starknet-indexer/generated/indexer/splyce_price_oracle_strk"
	"github.com/tsisar/starknet-indexer/generated/indexer/splyce_price_oracle_wbtc"
	"github.com/tsisar/starknet-indexer/generated/indexer/stability_fee_collector"
	"github.com/tsisar/starknet-indexer/generated/indexer/stablecoin"
	"github.com/tsisar/starknet-indexer/generated/indexer/stablecoin_adapter"
	"github.com/tsisar/starknet-indexer/generated/indexer/subscriptions_registry"
	"github.com/tsisar/starknet-indexer/generated/indexer/system_debt_engine"
	"github.com/tsisar/starknet-indexer/generated/indexer/treasury"
	"github.com/tsisar/starknet-indexer/generated/indexer/vault_eth"
	"github.com/tsisar/starknet-indexer/generated/indexer/vault_strk"
	"github.com/tsisar/starknet-indexer/generated/indexer/vault_wbtc"
	"github.com/tsisar/starknet-indexer/generated/indexer/wallet_factory"
	"github.com/tsisar/starknet-indexer/internal/types"
)

var Decoders = map[string]map[string]types.EventDecoderWithMeta{
	"aggregator_wbtc":          castDecoderMap(aggregator_wbtc.Decoders),
	"vault_eth":                castDecoderMap(vault_eth.Decoders),
	"aggregator_strk":          castDecoderMap(aggregator_strk.Decoders),
	"price_feed_eth":           castDecoderMap(price_feed_eth.Decoders),
	"bookkeeper":               castDecoderMap(bookkeeper.Decoders),
	"aggregator_factory":       castDecoderMap(aggregator_factory.Decoders),
	"wallet_factory":           castDecoderMap(wallet_factory.Decoders),
	"price_consumer":           castDecoderMap(price_consumer.Decoders),
	"splyce_price_oracle_strk": castDecoderMap(splyce_price_oracle_strk.Decoders),
	"collateral_pool_config":   castDecoderMap(collateral_pool_config.Decoders),
	"aggregators_registry":     castDecoderMap(aggregators_registry.Decoders),
	"system_debt_engine":       castDecoderMap(system_debt_engine.Decoders),
	"collateral_adapter_strk":  castDecoderMap(collateral_adapter_strk.Decoders),
	"nodes_registry":           castDecoderMap(nodes_registry.Decoders),
	"liquidation_engine":       castDecoderMap(liquidation_engine.Decoders),
	"price_feed_wbtc":          castDecoderMap(price_feed_wbtc.Decoders),
	"splyce_price_oracle_wbtc": castDecoderMap(splyce_price_oracle_wbtc.Decoders),
	"treasury":                 castDecoderMap(treasury.Decoders),
	"factory":                  castDecoderMap(factory.Decoders),
	"stablecoin":               castDecoderMap(stablecoin.Decoders),
	"stablecoin_adapter":       castDecoderMap(stablecoin_adapter.Decoders),
	"access_control_manager":   castDecoderMap(access_control_manager.Decoders),
	"stability_fee_collector":  castDecoderMap(stability_fee_collector.Decoders),
	"liquidation_strategy":     castDecoderMap(liquidation_strategy.Decoders),
	"admin_controls":           castDecoderMap(admin_controls.Decoders),
	"pragma_price_oracle_eth":  castDecoderMap(pragma_price_oracle_eth.Decoders),
	"collateral_adapter_eth":   castDecoderMap(collateral_adapter_eth.Decoders),
	"position_manager":         castDecoderMap(position_manager.Decoders),
	"price_feed_strk":          castDecoderMap(price_feed_strk.Decoders),
	"vault_strk":               castDecoderMap(vault_strk.Decoders),
	"access_control_config":    castDecoderMap(access_control_config.Decoders),
	"show_stopper":             castDecoderMap(show_stopper.Decoders),
	"subscriptions_registry":   castDecoderMap(subscriptions_registry.Decoders),
	"vault_wbtc":               castDecoderMap(vault_wbtc.Decoders),
	"collateral_adapter_wbtc":  castDecoderMap(collateral_adapter_wbtc.Decoders),
}

func castDecoderMap(m map[string]types.EventDecoderWithMeta) map[string]types.EventDecoderWithMeta {
	casted := make(map[string]types.EventDecoderWithMeta, len(m))
	for k, v := range m {
		casted[k] = v
	}
	return casted
}
