// Code generated by generator-core; DO NOT EDIT.
package wallet_factory

import (
	"fmt"
	"github.com/NethermindEth/juno/core/felt"
	"github.com/Tsisar/starknet-indexer/internal/types"
)

func DecodeRoleGranted(keys, data []*felt.Felt) (interface{}, error) {
	if len(data) != 3 {
		return nil, fmt.Errorf("expected 3 data fields, got %d", len(data))
	}

	return RoleGranted{
		Data: RoleGrantedData{
			Role:    types.NewTextFelt(data[0]),
			Account: types.NewAddress(data[1]),
			Sender:  types.NewAddress(data[2]),
		},
	}, nil
}

func DecodeRoleRevoked(keys, data []*felt.Felt) (interface{}, error) {
	if len(data) != 3 {
		return nil, fmt.Errorf("expected 3 data fields, got %d", len(data))
	}

	return RoleRevoked{
		Data: RoleRevokedData{
			Role:    types.NewTextFelt(data[0]),
			Account: types.NewAddress(data[1]),
			Sender:  types.NewAddress(data[2]),
		},
	}, nil
}

func DecodeRoleAdminChanged(keys, data []*felt.Felt) (interface{}, error) {
	if len(data) != 3 {
		return nil, fmt.Errorf("expected 3 data fields, got %d", len(data))
	}

	return RoleAdminChanged{
		Data: RoleAdminChangedData{
			Role:              types.NewTextFelt(data[0]),
			PreviousAdminRole: types.NewTextFelt(data[1]),
			NewAdminRole:      types.NewTextFelt(data[2]),
		},
	}, nil
}

func DecodeWalletDeployed(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 2 {
		return nil, fmt.Errorf("expected 2 keys, got %d", len(keys))
	}

	return WalletDeployed{
		Key: WalletDeployedKey{
			Wallet: types.NewAddress(keys[0]),
			Admin:  types.NewAddress(keys[1]),
		},
	}, nil
}

func DecodeLogAddToWhitelist(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 1 {
		return nil, fmt.Errorf("expected 1 keys, got %d", len(keys))
	}

	return LogAddToWhitelist{
		Key: LogAddToWhitelistKey{
			User: types.NewAddress(keys[0]),
		},
	}, nil
}

func DecodeLogRemoveFromWhitelist(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 1 {
		return nil, fmt.Errorf("expected 1 keys, got %d", len(keys))
	}

	return LogRemoveFromWhitelist{
		Key: LogRemoveFromWhitelistKey{
			User: types.NewAddress(keys[0]),
		},
	}, nil
}

func DecodeLogSetDecentralizedMode(keys, data []*felt.Felt) (interface{}, error) {
	if len(data) != 1 {
		return nil, fmt.Errorf("expected 1 data fields, got %d", len(data))
	}

	return LogSetDecentralizedMode{
		Data: LogSetDecentralizedModeData{
			IsOn: data[0].Cmp(&felt.Zero) != 0,
		},
	}, nil
}

var Decoders = map[string]types.EventDecoderWithMeta{
	"0x9d4a59b844ac9d98627ddba326ab3707a7d7e105fd03c777569d0f61a91f1e":  {Func: DecodeRoleGranted, Name: "stablecoin::components::accesscontrol::accesscontrol_component::AccessControlComponent::RoleGranted"},
	"0x2842fd3b01bb0858fef6a2da51cdd9f995c7d36d7625fb68dd5d69fcc0a6d76": {Func: DecodeRoleRevoked, Name: "stablecoin::components::accesscontrol::accesscontrol_component::AccessControlComponent::RoleRevoked"},
	"0x2b23b0c08c7b22209aea4100552de1b7876a49f04ee5a4d94f83ad24bc4ec1c": {Func: DecodeRoleAdminChanged, Name: "stablecoin::components::accesscontrol::accesscontrol_component::AccessControlComponent::RoleAdminChanged"},
	"0x2de91b88688d5c592c6f7c787a768767bf1659e67a7d6c28600397e69c02bba": {Func: DecodeWalletDeployed, Name: "stablecoin::core::wallet::wallet_factory::WalletFactory::WalletDeployed"},
	"0x1338d8637e5f1d9f0538699896d04ece348accfaac81d0924f421b1cfbfdfec": {Func: DecodeLogAddToWhitelist, Name: "stablecoin::core::wallet::wallet_factory::WalletFactory::LogAddToWhitelist"},
	"0x32176b0461878b055af0a933e1c41f4a0d653a05fd879ca66fc1f39baa2f79":  {Func: DecodeLogRemoveFromWhitelist, Name: "stablecoin::core::wallet::wallet_factory::WalletFactory::LogRemoveFromWhitelist"},
	"0x254026d1dae37a30913701c64e3c619c482b1f12786ecfe06975a832f0e4fe":  {Func: DecodeLogSetDecentralizedMode, Name: "stablecoin::core::wallet::wallet_factory::WalletFactory::LogSetDecentralizedMode"},
}
