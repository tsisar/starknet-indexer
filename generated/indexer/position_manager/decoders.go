// Code generated by generator-core; DO NOT EDIT.
package position_manager

import (
	"fmt"
	"github.com/NethermindEth/juno/core/felt"
	"github.com/Tsisar/starknet-indexer/internal/types"
)

func DecodePaused(keys, data []*felt.Felt) (interface{}, error) {
	if len(data) != 1 {
		return nil, fmt.Errorf("expected 1 data fields, got %d", len(data))
	}

	return Paused{
		Data: PausedData{
			Account: types.NewAddress(data[0]),
		},
	}, nil
}

func DecodeUnpaused(keys, data []*felt.Felt) (interface{}, error) {
	if len(data) != 1 {
		return nil, fmt.Errorf("expected 1 data fields, got %d", len(data))
	}

	return Unpaused{
		Data: UnpausedData{
			Account: types.NewAddress(data[0]),
		},
	}, nil
}

func DecodeLogNewPosition(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 4 {
		return nil, fmt.Errorf("expected 4 keys, got %d", len(keys))
	}

	return LogNewPosition{
		Key: LogNewPositionKey{
			User:  types.NewAddress(keys[0]),
			Owner: types.NewAddress(keys[1]),
			PositionId: types.U256{
				Low:  keys[2].String(),
				High: keys[3].String(),
			},
		},
	}, nil
}

func DecodeLogAllowManagePosition(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 5 {
		return nil, fmt.Errorf("expected 5 keys, got %d", len(keys))
	}
	if len(data) != 1 {
		return nil, fmt.Errorf("expected 1 data fields, got %d", len(data))
	}

	return LogAllowManagePosition{
		Key: LogAllowManagePositionKey{
			Caller: types.NewAddress(keys[0]),
			PositionId: types.U256{
				Low:  keys[1].String(),
				High: keys[2].String(),
			},
			Owner: types.NewAddress(keys[3]),
			User:  types.NewAddress(keys[4]),
		},
		Data: LogAllowManagePositionData{
			Allow: data[0].Cmp(&felt.Zero) != 0,
		},
	}, nil
}

func DecodeLogAllowMigratePosition(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 2 {
		return nil, fmt.Errorf("expected 2 keys, got %d", len(keys))
	}
	if len(data) != 1 {
		return nil, fmt.Errorf("expected 1 data fields, got %d", len(data))
	}

	return LogAllowMigratePosition{
		Key: LogAllowMigratePositionKey{
			Caller: types.NewAddress(keys[0]),
			User:   types.NewAddress(keys[1]),
		},
		Data: LogAllowMigratePositionData{
			Allow: data[0].Cmp(&felt.Zero) != 0,
		},
	}, nil
}

func DecodeLogExportPosition(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 4 {
		return nil, fmt.Errorf("expected 4 keys, got %d", len(keys))
	}
	if len(data) != 4 {
		return nil, fmt.Errorf("expected 4 data fields, got %d", len(data))
	}

	return LogExportPosition{
		Key: LogExportPositionKey{
			PositionId: types.U256{
				Low:  keys[0].String(),
				High: keys[1].String(),
			},
			Source:      types.NewAddress(keys[2]),
			Destination: types.NewAddress(keys[3]),
		},
		Data: LogExportPositionData{
			LockedCollateral: types.U256{
				Low:  data[0].String(),
				High: data[1].String(),
			},
			DebtShare: types.U256{
				Low:  data[2].String(),
				High: data[3].String(),
			},
		},
	}, nil
}

func DecodeLogImportPosition(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 4 {
		return nil, fmt.Errorf("expected 4 keys, got %d", len(keys))
	}
	if len(data) != 4 {
		return nil, fmt.Errorf("expected 4 data fields, got %d", len(data))
	}

	return LogImportPosition{
		Key: LogImportPositionKey{
			PositionId: types.U256{
				Low:  keys[0].String(),
				High: keys[1].String(),
			},
			Source:      types.NewAddress(keys[2]),
			Destination: types.NewAddress(keys[3]),
		},
		Data: LogImportPositionData{
			LockedCollateral: types.U256{
				Low:  data[0].String(),
				High: data[1].String(),
			},
			DebtShare: types.U256{
				Low:  data[2].String(),
				High: data[3].String(),
			},
		},
	}, nil
}

func DecodeLogMovePosition(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 4 {
		return nil, fmt.Errorf("expected 4 keys, got %d", len(keys))
	}
	if len(data) != 4 {
		return nil, fmt.Errorf("expected 4 data fields, got %d", len(data))
	}

	return LogMovePosition{
		Key: LogMovePositionKey{
			SourceId: types.U256{
				Low:  keys[0].String(),
				High: keys[1].String(),
			},
			DestinationId: types.U256{
				Low:  keys[2].String(),
				High: keys[3].String(),
			},
		},
		Data: LogMovePositionData{
			LockedCollateral: types.U256{
				Low:  data[0].String(),
				High: data[1].String(),
			},
			DebtShare: types.U256{
				Low:  data[2].String(),
				High: data[3].String(),
			},
		},
	}, nil
}

func DecodeLogPriceConsumerUpdated(keys, data []*felt.Felt) (interface{}, error) {
	if len(data) != 2 {
		return nil, fmt.Errorf("expected 2 data fields, got %d", len(data))
	}

	return LogPriceConsumerUpdated{
		Data: LogPriceConsumerUpdatedData{
			OldPriceConsumer: types.NewAddress(data[0]),
			NewPriceConsumer: types.NewAddress(data[1]),
		},
	}, nil
}

func DecodeLogBookKeeperUpdated(keys, data []*felt.Felt) (interface{}, error) {
	if len(data) != 2 {
		return nil, fmt.Errorf("expected 2 data fields, got %d", len(data))
	}

	return LogBookKeeperUpdated{
		Data: LogBookKeeperUpdatedData{
			OldBookkeeper: types.NewAddress(data[0]),
			NewBookkeeper: types.NewAddress(data[1]),
		},
	}, nil
}

var Decoders = map[string]types.EventDecoderWithMeta{
	"0x2eb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90": {Func: DecodePaused, Name: "stablecoin::components::pausable::PausableComponent::Paused"},
	"0xece5baf71f670bcb771481fd7bd9efd6d6b8053246fe67b5a13db8bf5f50f1":  {Func: DecodeUnpaused, Name: "stablecoin::components::pausable::PausableComponent::Unpaused"},
	"0x32629f7e67844bdc837d399e8d1a00c860dd5c08b4b9ffaf5b2b85cea9985da": {Func: DecodeLogNewPosition, Name: "stablecoin::core::position::position_manager::PositionManager::LogNewPosition"},
	"0x2ea83b28f75e78cf919caf5c2f99f84825f4556ca04661b1e89561ad514678b": {Func: DecodeLogAllowManagePosition, Name: "stablecoin::core::position::position_manager::PositionManager::LogAllowManagePosition"},
	"0x1282346e489bc3491ab170923b6840a4af18be1b601e75dc59203046c4ddf6c": {Func: DecodeLogAllowMigratePosition, Name: "stablecoin::core::position::position_manager::PositionManager::LogAllowMigratePosition"},
	"0x1781f2b1a3a3cd980f6c9584016c7aec75e0796b0b3e94e44654f62f5cc6424": {Func: DecodeLogExportPosition, Name: "stablecoin::core::position::position_manager::PositionManager::LogExportPosition"},
	"0x2d6c79d18c41c31341ce6ad76fb80167ef073215b8e25bf97552870b277a5f1": {Func: DecodeLogImportPosition, Name: "stablecoin::core::position::position_manager::PositionManager::LogImportPosition"},
	"0x11c1992ea224f3fbcb7f089211d6bfabbc3e8cfb1a573d989b6733f167e8bc0": {Func: DecodeLogMovePosition, Name: "stablecoin::core::position::position_manager::PositionManager::LogMovePosition"},
	"0xe1218b152cbe4bb9881704d06fe27c3dee9eb8a6cafae595e43bd813c02471":  {Func: DecodeLogPriceConsumerUpdated, Name: "stablecoin::core::position::position_manager::PositionManager::LogPriceConsumerUpdated"},
	"0x15894a9b98b5a354d0357b30add75ad29e5e5d80a28763b8ac298ba650e8e1d": {Func: DecodeLogBookKeeperUpdated, Name: "stablecoin::core::position::position_manager::PositionManager::LogBookKeeperUpdated"},
}
