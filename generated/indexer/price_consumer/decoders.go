// Code generated by generator-core; DO NOT EDIT.
package price_consumer

import (
	"fmt"
	"github.com/NethermindEth/juno/core/felt"
	"github.com/Tsisar/starknet-indexer/internal/types"
)

func DecodePaused(keys, data []*felt.Felt) (interface{}, error) {
	if len(data) != 1 {
		return nil, fmt.Errorf("expected 1 data fields, got %d", len(data))
	}

	return Paused{
		Data: PausedData{
			Account: types.NewAddress(data[0]),
		},
	}, nil
}

func DecodeUnpaused(keys, data []*felt.Felt) (interface{}, error) {
	if len(data) != 1 {
		return nil, fmt.Errorf("expected 1 data fields, got %d", len(data))
	}

	return Unpaused{
		Data: UnpausedData{
			Account: types.NewAddress(data[0]),
		},
	}, nil
}

func DecodeLogSetPrice(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 1 {
		return nil, fmt.Errorf("expected 1 keys, got %d", len(keys))
	}
	if len(data) != 4 {
		return nil, fmt.Errorf("expected 4 data fields, got %d", len(data))
	}

	return LogSetPrice{
		Key: LogSetPriceKey{
			CollateralPoolId: types.NewTextFelt(keys[0]),
		},
		Data: LogSetPriceData{
			RawPrice: types.U256{
				Low:  data[0].String(),
				High: data[1].String(),
			},
			PriceWithSafetyMargin: types.U256{
				Low:  data[2].String(),
				High: data[3].String(),
			},
		},
	}, nil
}

func DecodeLogSetPriceForBatch(keys, data []*felt.Felt) (interface{}, error) {
	if len(data) != 1 {
		return nil, fmt.Errorf("expected 1 data fields, got %d", len(data))
	}

	return LogSetPriceForBatch{
		Data: LogSetPriceForBatchData{
			CollateralPoolIds: data[0].String(),
		},
	}, nil
}

func DecodeLogSetStableCoinReferencePrice(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 1 {
		return nil, fmt.Errorf("expected 1 keys, got %d", len(keys))
	}
	if len(data) != 2 {
		return nil, fmt.Errorf("expected 2 data fields, got %d", len(data))
	}

	return LogSetStableCoinReferencePrice{
		Key: LogSetStableCoinReferencePriceKey{
			Caller: types.NewAddress(keys[0]),
		},
		Data: LogSetStableCoinReferencePriceData{
			Data: types.U256{
				Low:  data[0].String(),
				High: data[1].String(),
			},
		},
	}, nil
}

func DecodeLogSetBookKeeper(keys, data []*felt.Felt) (interface{}, error) {
	if len(data) != 1 {
		return nil, fmt.Errorf("expected 1 data fields, got %d", len(data))
	}

	return LogSetBookKeeper{
		Data: LogSetBookKeeperData{
			NewAddress: types.NewAddress(data[0]),
		},
	}, nil
}

func DecodeLogCage(keys, data []*felt.Felt) (interface{}, error) {

	return LogCage{}, nil
}

var Decoders = map[string]types.EventDecoderWithMeta{
	"0x2eb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90": {Func: DecodePaused, Name: "stablecoin::components::pausable::PausableComponent::Paused"},
	"0xece5baf71f670bcb771481fd7bd9efd6d6b8053246fe67b5a13db8bf5f50f1":  {Func: DecodeUnpaused, Name: "stablecoin::components::pausable::PausableComponent::Unpaused"},
	"0x12afa7db819f5a23f7890708cc38ac2806814f52c923102f9fcb6c0ff6f5f87": {Func: DecodeLogSetPrice, Name: "stablecoin::core::price_consumer::PriceConsumer::LogSetPrice"},
	"0xaf4eb587cffb0b42f6b007ff5df423eb3931f498c11c20f44485f21547cfec":  {Func: DecodeLogSetPriceForBatch, Name: "stablecoin::core::price_consumer::PriceConsumer::LogSetPriceForBatch"},
	"0x20cf66bdb7b8fdddcac08f3c4b44a73ec3a4213e10770b8d28187eaf001b8d5": {Func: DecodeLogSetStableCoinReferencePrice, Name: "stablecoin::core::price_consumer::PriceConsumer::LogSetStableCoinReferencePrice"},
	"0x1ff221b30a3b491affd2f37d096cf0e8d5565722b8ff03d4751f1c2f067083f": {Func: DecodeLogSetBookKeeper, Name: "stablecoin::core::price_consumer::PriceConsumer::LogSetBookKeeper"},
	"0x75ef26d8af3732b337ded7c33086749b36a2c1ec660f2de592fe60717edfd":   {Func: DecodeLogCage, Name: "stablecoin::core::price_consumer::PriceConsumer::LogCage"},
}
