// Code generated by generator-core; DO NOT EDIT.
package subscriptions_registry

import (
	"fmt"
	"github.com/NethermindEth/juno/core/felt"
	"github.com/tsisar/starknet-indexer/internal/types"
)

func DecodeLogSubscribed(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 4 {
		return nil, fmt.Errorf("expected 4 keys, got %d", len(keys))
	}

	return LogSubscribed{
		Key: LogSubscribedKey{
			Subscriber: types.NewAddress(keys[0]),
			Aggregator: types.NewAddress(keys[1]),
			DueTime: types.U256{
				Low:  keys[2].String(),
				High: keys[3].String(),
			},
		},
	}, nil
}

func DecodeLogUnsubscribed(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 2 {
		return nil, fmt.Errorf("expected 2 keys, got %d", len(keys))
	}

	return LogUnsubscribed{
		Key: LogUnsubscribedKey{
			Subscriber: types.NewAddress(keys[0]),
			Aggregator: types.NewAddress(keys[1]),
		},
	}, nil
}

func DecodeLogSubscriptionPriceSet(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 3 {
		return nil, fmt.Errorf("expected 3 keys, got %d", len(keys))
	}

	return LogSubscriptionPriceSet{
		Key: LogSubscriptionPriceSetKey{
			Aggregator: types.NewAddress(keys[0]),
			Price: types.U256{
				Low:  keys[1].String(),
				High: keys[2].String(),
			},
		},
	}, nil
}

func DecodeLogSubscriptionFeeSet(keys, data []*felt.Felt) (interface{}, error) {
	if len(keys) != 2 {
		return nil, fmt.Errorf("expected 2 keys, got %d", len(keys))
	}

	return LogSubscriptionFeeSet{
		Key: LogSubscriptionFeeSetKey{
			Fee: types.U256{
				Low:  keys[0].String(),
				High: keys[1].String(),
			},
		},
	}, nil
}

var Decoders = map[string]types.EventDecoderWithMeta{
	"0x2ff57bc5025960aa66ed0139f6364fe073feca2fdc29289d4e64239605ab0d8": {Func: DecodeLogSubscribed, Name: "oracle_network::core::subscriptions_registry::SubscriptionsRegistry::LogSubscribed"},
	"0xf5411fb37626d8b5f976ffdd6bb957e1777dfe66ee58c5c76dca1ae68559fe":  {Func: DecodeLogUnsubscribed, Name: "oracle_network::core::subscriptions_registry::SubscriptionsRegistry::LogUnsubscribed"},
	"0x3c876e474e517b3ee1137acdd5eb9c49afac492c666c5c29190e82abd2185":   {Func: DecodeLogSubscriptionPriceSet, Name: "oracle_network::core::subscriptions_registry::SubscriptionsRegistry::LogSubscriptionPriceSet"},
	"0x193d7cde48c5d4597397463fada791fa9decf0163212190523f019badbda597": {Func: DecodeLogSubscriptionFeeSet, Name: "oracle_network::core::subscriptions_registry::SubscriptionsRegistry::LogSubscriptionFeeSet"},
}
