// Code generated by ent, DO NOT EDIT.

package positionactivity

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/tsisar/starknet-indexer/generated/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldContainsFold(FieldID, id))
}

// ActivityState applies equality check predicate on the "activityState" field. It's identical to ActivityStateEQ.
func ActivityState(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEQ(FieldActivityState, v))
}

// CollateralAmount applies equality check predicate on the "collateralAmount" field. It's identical to CollateralAmountEQ.
func CollateralAmount(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEQ(FieldCollateralAmount, v))
}

// DebtAmount applies equality check predicate on the "debtAmount" field. It's identical to DebtAmountEQ.
func DebtAmount(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEQ(FieldDebtAmount, v))
}

// BlockNumber applies equality check predicate on the "blockNumber" field. It's identical to BlockNumberEQ.
func BlockNumber(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEQ(FieldBlockNumber, v))
}

// BlockTimestamp applies equality check predicate on the "blockTimestamp" field. It's identical to BlockTimestampEQ.
func BlockTimestamp(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEQ(FieldBlockTimestamp, v))
}

// Transaction applies equality check predicate on the "transaction" field. It's identical to TransactionEQ.
func Transaction(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEQ(FieldTransaction, v))
}

// ActivityStateEQ applies the EQ predicate on the "activityState" field.
func ActivityStateEQ(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEQ(FieldActivityState, v))
}

// ActivityStateNEQ applies the NEQ predicate on the "activityState" field.
func ActivityStateNEQ(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldNEQ(FieldActivityState, v))
}

// ActivityStateIn applies the In predicate on the "activityState" field.
func ActivityStateIn(vs ...string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldIn(FieldActivityState, vs...))
}

// ActivityStateNotIn applies the NotIn predicate on the "activityState" field.
func ActivityStateNotIn(vs ...string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldNotIn(FieldActivityState, vs...))
}

// ActivityStateGT applies the GT predicate on the "activityState" field.
func ActivityStateGT(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldGT(FieldActivityState, v))
}

// ActivityStateGTE applies the GTE predicate on the "activityState" field.
func ActivityStateGTE(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldGTE(FieldActivityState, v))
}

// ActivityStateLT applies the LT predicate on the "activityState" field.
func ActivityStateLT(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldLT(FieldActivityState, v))
}

// ActivityStateLTE applies the LTE predicate on the "activityState" field.
func ActivityStateLTE(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldLTE(FieldActivityState, v))
}

// ActivityStateContains applies the Contains predicate on the "activityState" field.
func ActivityStateContains(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldContains(FieldActivityState, v))
}

// ActivityStateHasPrefix applies the HasPrefix predicate on the "activityState" field.
func ActivityStateHasPrefix(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldHasPrefix(FieldActivityState, v))
}

// ActivityStateHasSuffix applies the HasSuffix predicate on the "activityState" field.
func ActivityStateHasSuffix(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldHasSuffix(FieldActivityState, v))
}

// ActivityStateEqualFold applies the EqualFold predicate on the "activityState" field.
func ActivityStateEqualFold(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEqualFold(FieldActivityState, v))
}

// ActivityStateContainsFold applies the ContainsFold predicate on the "activityState" field.
func ActivityStateContainsFold(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldContainsFold(FieldActivityState, v))
}

// CollateralAmountEQ applies the EQ predicate on the "collateralAmount" field.
func CollateralAmountEQ(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEQ(FieldCollateralAmount, v))
}

// CollateralAmountNEQ applies the NEQ predicate on the "collateralAmount" field.
func CollateralAmountNEQ(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldNEQ(FieldCollateralAmount, v))
}

// CollateralAmountIn applies the In predicate on the "collateralAmount" field.
func CollateralAmountIn(vs ...string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldIn(FieldCollateralAmount, vs...))
}

// CollateralAmountNotIn applies the NotIn predicate on the "collateralAmount" field.
func CollateralAmountNotIn(vs ...string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldNotIn(FieldCollateralAmount, vs...))
}

// CollateralAmountGT applies the GT predicate on the "collateralAmount" field.
func CollateralAmountGT(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldGT(FieldCollateralAmount, v))
}

// CollateralAmountGTE applies the GTE predicate on the "collateralAmount" field.
func CollateralAmountGTE(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldGTE(FieldCollateralAmount, v))
}

// CollateralAmountLT applies the LT predicate on the "collateralAmount" field.
func CollateralAmountLT(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldLT(FieldCollateralAmount, v))
}

// CollateralAmountLTE applies the LTE predicate on the "collateralAmount" field.
func CollateralAmountLTE(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldLTE(FieldCollateralAmount, v))
}

// CollateralAmountContains applies the Contains predicate on the "collateralAmount" field.
func CollateralAmountContains(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldContains(FieldCollateralAmount, v))
}

// CollateralAmountHasPrefix applies the HasPrefix predicate on the "collateralAmount" field.
func CollateralAmountHasPrefix(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldHasPrefix(FieldCollateralAmount, v))
}

// CollateralAmountHasSuffix applies the HasSuffix predicate on the "collateralAmount" field.
func CollateralAmountHasSuffix(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldHasSuffix(FieldCollateralAmount, v))
}

// CollateralAmountEqualFold applies the EqualFold predicate on the "collateralAmount" field.
func CollateralAmountEqualFold(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEqualFold(FieldCollateralAmount, v))
}

// CollateralAmountContainsFold applies the ContainsFold predicate on the "collateralAmount" field.
func CollateralAmountContainsFold(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldContainsFold(FieldCollateralAmount, v))
}

// DebtAmountEQ applies the EQ predicate on the "debtAmount" field.
func DebtAmountEQ(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEQ(FieldDebtAmount, v))
}

// DebtAmountNEQ applies the NEQ predicate on the "debtAmount" field.
func DebtAmountNEQ(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldNEQ(FieldDebtAmount, v))
}

// DebtAmountIn applies the In predicate on the "debtAmount" field.
func DebtAmountIn(vs ...string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldIn(FieldDebtAmount, vs...))
}

// DebtAmountNotIn applies the NotIn predicate on the "debtAmount" field.
func DebtAmountNotIn(vs ...string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldNotIn(FieldDebtAmount, vs...))
}

// DebtAmountGT applies the GT predicate on the "debtAmount" field.
func DebtAmountGT(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldGT(FieldDebtAmount, v))
}

// DebtAmountGTE applies the GTE predicate on the "debtAmount" field.
func DebtAmountGTE(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldGTE(FieldDebtAmount, v))
}

// DebtAmountLT applies the LT predicate on the "debtAmount" field.
func DebtAmountLT(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldLT(FieldDebtAmount, v))
}

// DebtAmountLTE applies the LTE predicate on the "debtAmount" field.
func DebtAmountLTE(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldLTE(FieldDebtAmount, v))
}

// DebtAmountContains applies the Contains predicate on the "debtAmount" field.
func DebtAmountContains(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldContains(FieldDebtAmount, v))
}

// DebtAmountHasPrefix applies the HasPrefix predicate on the "debtAmount" field.
func DebtAmountHasPrefix(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldHasPrefix(FieldDebtAmount, v))
}

// DebtAmountHasSuffix applies the HasSuffix predicate on the "debtAmount" field.
func DebtAmountHasSuffix(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldHasSuffix(FieldDebtAmount, v))
}

// DebtAmountEqualFold applies the EqualFold predicate on the "debtAmount" field.
func DebtAmountEqualFold(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEqualFold(FieldDebtAmount, v))
}

// DebtAmountContainsFold applies the ContainsFold predicate on the "debtAmount" field.
func DebtAmountContainsFold(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldContainsFold(FieldDebtAmount, v))
}

// BlockNumberEQ applies the EQ predicate on the "blockNumber" field.
func BlockNumberEQ(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEQ(FieldBlockNumber, v))
}

// BlockNumberNEQ applies the NEQ predicate on the "blockNumber" field.
func BlockNumberNEQ(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldNEQ(FieldBlockNumber, v))
}

// BlockNumberIn applies the In predicate on the "blockNumber" field.
func BlockNumberIn(vs ...string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldIn(FieldBlockNumber, vs...))
}

// BlockNumberNotIn applies the NotIn predicate on the "blockNumber" field.
func BlockNumberNotIn(vs ...string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldNotIn(FieldBlockNumber, vs...))
}

// BlockNumberGT applies the GT predicate on the "blockNumber" field.
func BlockNumberGT(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldGT(FieldBlockNumber, v))
}

// BlockNumberGTE applies the GTE predicate on the "blockNumber" field.
func BlockNumberGTE(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldGTE(FieldBlockNumber, v))
}

// BlockNumberLT applies the LT predicate on the "blockNumber" field.
func BlockNumberLT(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldLT(FieldBlockNumber, v))
}

// BlockNumberLTE applies the LTE predicate on the "blockNumber" field.
func BlockNumberLTE(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldLTE(FieldBlockNumber, v))
}

// BlockNumberContains applies the Contains predicate on the "blockNumber" field.
func BlockNumberContains(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldContains(FieldBlockNumber, v))
}

// BlockNumberHasPrefix applies the HasPrefix predicate on the "blockNumber" field.
func BlockNumberHasPrefix(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldHasPrefix(FieldBlockNumber, v))
}

// BlockNumberHasSuffix applies the HasSuffix predicate on the "blockNumber" field.
func BlockNumberHasSuffix(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldHasSuffix(FieldBlockNumber, v))
}

// BlockNumberEqualFold applies the EqualFold predicate on the "blockNumber" field.
func BlockNumberEqualFold(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEqualFold(FieldBlockNumber, v))
}

// BlockNumberContainsFold applies the ContainsFold predicate on the "blockNumber" field.
func BlockNumberContainsFold(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldContainsFold(FieldBlockNumber, v))
}

// BlockTimestampEQ applies the EQ predicate on the "blockTimestamp" field.
func BlockTimestampEQ(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEQ(FieldBlockTimestamp, v))
}

// BlockTimestampNEQ applies the NEQ predicate on the "blockTimestamp" field.
func BlockTimestampNEQ(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldNEQ(FieldBlockTimestamp, v))
}

// BlockTimestampIn applies the In predicate on the "blockTimestamp" field.
func BlockTimestampIn(vs ...string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldIn(FieldBlockTimestamp, vs...))
}

// BlockTimestampNotIn applies the NotIn predicate on the "blockTimestamp" field.
func BlockTimestampNotIn(vs ...string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldNotIn(FieldBlockTimestamp, vs...))
}

// BlockTimestampGT applies the GT predicate on the "blockTimestamp" field.
func BlockTimestampGT(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldGT(FieldBlockTimestamp, v))
}

// BlockTimestampGTE applies the GTE predicate on the "blockTimestamp" field.
func BlockTimestampGTE(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldGTE(FieldBlockTimestamp, v))
}

// BlockTimestampLT applies the LT predicate on the "blockTimestamp" field.
func BlockTimestampLT(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldLT(FieldBlockTimestamp, v))
}

// BlockTimestampLTE applies the LTE predicate on the "blockTimestamp" field.
func BlockTimestampLTE(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldLTE(FieldBlockTimestamp, v))
}

// BlockTimestampContains applies the Contains predicate on the "blockTimestamp" field.
func BlockTimestampContains(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldContains(FieldBlockTimestamp, v))
}

// BlockTimestampHasPrefix applies the HasPrefix predicate on the "blockTimestamp" field.
func BlockTimestampHasPrefix(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldHasPrefix(FieldBlockTimestamp, v))
}

// BlockTimestampHasSuffix applies the HasSuffix predicate on the "blockTimestamp" field.
func BlockTimestampHasSuffix(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldHasSuffix(FieldBlockTimestamp, v))
}

// BlockTimestampEqualFold applies the EqualFold predicate on the "blockTimestamp" field.
func BlockTimestampEqualFold(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEqualFold(FieldBlockTimestamp, v))
}

// BlockTimestampContainsFold applies the ContainsFold predicate on the "blockTimestamp" field.
func BlockTimestampContainsFold(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldContainsFold(FieldBlockTimestamp, v))
}

// TransactionEQ applies the EQ predicate on the "transaction" field.
func TransactionEQ(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEQ(FieldTransaction, v))
}

// TransactionNEQ applies the NEQ predicate on the "transaction" field.
func TransactionNEQ(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldNEQ(FieldTransaction, v))
}

// TransactionIn applies the In predicate on the "transaction" field.
func TransactionIn(vs ...string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldIn(FieldTransaction, vs...))
}

// TransactionNotIn applies the NotIn predicate on the "transaction" field.
func TransactionNotIn(vs ...string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldNotIn(FieldTransaction, vs...))
}

// TransactionGT applies the GT predicate on the "transaction" field.
func TransactionGT(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldGT(FieldTransaction, v))
}

// TransactionGTE applies the GTE predicate on the "transaction" field.
func TransactionGTE(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldGTE(FieldTransaction, v))
}

// TransactionLT applies the LT predicate on the "transaction" field.
func TransactionLT(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldLT(FieldTransaction, v))
}

// TransactionLTE applies the LTE predicate on the "transaction" field.
func TransactionLTE(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldLTE(FieldTransaction, v))
}

// TransactionContains applies the Contains predicate on the "transaction" field.
func TransactionContains(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldContains(FieldTransaction, v))
}

// TransactionHasPrefix applies the HasPrefix predicate on the "transaction" field.
func TransactionHasPrefix(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldHasPrefix(FieldTransaction, v))
}

// TransactionHasSuffix applies the HasSuffix predicate on the "transaction" field.
func TransactionHasSuffix(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldHasSuffix(FieldTransaction, v))
}

// TransactionEqualFold applies the EqualFold predicate on the "transaction" field.
func TransactionEqualFold(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldEqualFold(FieldTransaction, v))
}

// TransactionContainsFold applies the ContainsFold predicate on the "transaction" field.
func TransactionContainsFold(v string) predicate.PositionActivity {
	return predicate.PositionActivity(sql.FieldContainsFold(FieldTransaction, v))
}

// HasPosition applies the HasEdge predicate on the "position" edge.
func HasPosition() predicate.PositionActivity {
	return predicate.PositionActivity(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, PositionTable, PositionColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPositionWith applies the HasEdge predicate on the "position" edge with a given conditions (other predicates).
func HasPositionWith(preds ...predicate.Position) predicate.PositionActivity {
	return predicate.PositionActivity(func(s *sql.Selector) {
		step := newPositionStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PositionActivity) predicate.PositionActivity {
	return predicate.PositionActivity(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PositionActivity) predicate.PositionActivity {
	return predicate.PositionActivity(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PositionActivity) predicate.PositionActivity {
	return predicate.PositionActivity(sql.NotPredicates(p))
}
