// Code generated by ent, DO NOT EDIT.

package pool

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/tsisar/starknet-indexer/generated/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldID, id))
}

// PoolName applies equality check predicate on the "poolName" field. It's identical to PoolNameEQ.
func PoolName(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldPoolName, v))
}

// DebtCeiling applies equality check predicate on the "debtCeiling" field. It's identical to DebtCeilingEQ.
func DebtCeiling(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldDebtCeiling, v))
}

// LiquidationRatio applies equality check predicate on the "liquidationRatio" field. It's identical to LiquidationRatioEQ.
func LiquidationRatio(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldLiquidationRatio, v))
}

// StabilityFeeRate applies equality check predicate on the "stabilityFeeRate" field. It's identical to StabilityFeeRateEQ.
func StabilityFeeRate(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldStabilityFeeRate, v))
}

// TokenAdapterAddress applies equality check predicate on the "tokenAdapterAddress" field. It's identical to TokenAdapterAddressEQ.
func TokenAdapterAddress(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldTokenAdapterAddress, v))
}

// LockedCollateral applies equality check predicate on the "lockedCollateral" field. It's identical to LockedCollateralEQ.
func LockedCollateral(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldLockedCollateral, v))
}

// CollateralPrice applies equality check predicate on the "collateralPrice" field. It's identical to CollateralPriceEQ.
func CollateralPrice(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldCollateralPrice, v))
}

// CollateralLastPrice applies equality check predicate on the "collateralLastPrice" field. It's identical to CollateralLastPriceEQ.
func CollateralLastPrice(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldCollateralLastPrice, v))
}

// PriceWithSafetyMargin applies equality check predicate on the "priceWithSafetyMargin" field. It's identical to PriceWithSafetyMarginEQ.
func PriceWithSafetyMargin(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldPriceWithSafetyMargin, v))
}

// RawPrice applies equality check predicate on the "rawPrice" field. It's identical to RawPriceEQ.
func RawPrice(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldRawPrice, v))
}

// DebtAccumulatedRate applies equality check predicate on the "debtAccumulatedRate" field. It's identical to DebtAccumulatedRateEQ.
func DebtAccumulatedRate(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldDebtAccumulatedRate, v))
}

// TotalBorrowed applies equality check predicate on the "totalBorrowed" field. It's identical to TotalBorrowedEQ.
func TotalBorrowed(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldTotalBorrowed, v))
}

// TotalAvailable applies equality check predicate on the "totalAvailable" field. It's identical to TotalAvailableEQ.
func TotalAvailable(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldTotalAvailable, v))
}

// Tvl applies equality check predicate on the "tvl" field. It's identical to TvlEQ.
func Tvl(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldTvl, v))
}

// PoolNameEQ applies the EQ predicate on the "poolName" field.
func PoolNameEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldPoolName, v))
}

// PoolNameNEQ applies the NEQ predicate on the "poolName" field.
func PoolNameNEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldPoolName, v))
}

// PoolNameIn applies the In predicate on the "poolName" field.
func PoolNameIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldPoolName, vs...))
}

// PoolNameNotIn applies the NotIn predicate on the "poolName" field.
func PoolNameNotIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldPoolName, vs...))
}

// PoolNameGT applies the GT predicate on the "poolName" field.
func PoolNameGT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldPoolName, v))
}

// PoolNameGTE applies the GTE predicate on the "poolName" field.
func PoolNameGTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldPoolName, v))
}

// PoolNameLT applies the LT predicate on the "poolName" field.
func PoolNameLT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldPoolName, v))
}

// PoolNameLTE applies the LTE predicate on the "poolName" field.
func PoolNameLTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldPoolName, v))
}

// PoolNameContains applies the Contains predicate on the "poolName" field.
func PoolNameContains(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContains(FieldPoolName, v))
}

// PoolNameHasPrefix applies the HasPrefix predicate on the "poolName" field.
func PoolNameHasPrefix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasPrefix(FieldPoolName, v))
}

// PoolNameHasSuffix applies the HasSuffix predicate on the "poolName" field.
func PoolNameHasSuffix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasSuffix(FieldPoolName, v))
}

// PoolNameEqualFold applies the EqualFold predicate on the "poolName" field.
func PoolNameEqualFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldPoolName, v))
}

// PoolNameContainsFold applies the ContainsFold predicate on the "poolName" field.
func PoolNameContainsFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldPoolName, v))
}

// DebtCeilingEQ applies the EQ predicate on the "debtCeiling" field.
func DebtCeilingEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldDebtCeiling, v))
}

// DebtCeilingNEQ applies the NEQ predicate on the "debtCeiling" field.
func DebtCeilingNEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldDebtCeiling, v))
}

// DebtCeilingIn applies the In predicate on the "debtCeiling" field.
func DebtCeilingIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldDebtCeiling, vs...))
}

// DebtCeilingNotIn applies the NotIn predicate on the "debtCeiling" field.
func DebtCeilingNotIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldDebtCeiling, vs...))
}

// DebtCeilingGT applies the GT predicate on the "debtCeiling" field.
func DebtCeilingGT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldDebtCeiling, v))
}

// DebtCeilingGTE applies the GTE predicate on the "debtCeiling" field.
func DebtCeilingGTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldDebtCeiling, v))
}

// DebtCeilingLT applies the LT predicate on the "debtCeiling" field.
func DebtCeilingLT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldDebtCeiling, v))
}

// DebtCeilingLTE applies the LTE predicate on the "debtCeiling" field.
func DebtCeilingLTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldDebtCeiling, v))
}

// DebtCeilingContains applies the Contains predicate on the "debtCeiling" field.
func DebtCeilingContains(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContains(FieldDebtCeiling, v))
}

// DebtCeilingHasPrefix applies the HasPrefix predicate on the "debtCeiling" field.
func DebtCeilingHasPrefix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasPrefix(FieldDebtCeiling, v))
}

// DebtCeilingHasSuffix applies the HasSuffix predicate on the "debtCeiling" field.
func DebtCeilingHasSuffix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasSuffix(FieldDebtCeiling, v))
}

// DebtCeilingEqualFold applies the EqualFold predicate on the "debtCeiling" field.
func DebtCeilingEqualFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldDebtCeiling, v))
}

// DebtCeilingContainsFold applies the ContainsFold predicate on the "debtCeiling" field.
func DebtCeilingContainsFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldDebtCeiling, v))
}

// LiquidationRatioEQ applies the EQ predicate on the "liquidationRatio" field.
func LiquidationRatioEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldLiquidationRatio, v))
}

// LiquidationRatioNEQ applies the NEQ predicate on the "liquidationRatio" field.
func LiquidationRatioNEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldLiquidationRatio, v))
}

// LiquidationRatioIn applies the In predicate on the "liquidationRatio" field.
func LiquidationRatioIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldLiquidationRatio, vs...))
}

// LiquidationRatioNotIn applies the NotIn predicate on the "liquidationRatio" field.
func LiquidationRatioNotIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldLiquidationRatio, vs...))
}

// LiquidationRatioGT applies the GT predicate on the "liquidationRatio" field.
func LiquidationRatioGT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldLiquidationRatio, v))
}

// LiquidationRatioGTE applies the GTE predicate on the "liquidationRatio" field.
func LiquidationRatioGTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldLiquidationRatio, v))
}

// LiquidationRatioLT applies the LT predicate on the "liquidationRatio" field.
func LiquidationRatioLT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldLiquidationRatio, v))
}

// LiquidationRatioLTE applies the LTE predicate on the "liquidationRatio" field.
func LiquidationRatioLTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldLiquidationRatio, v))
}

// LiquidationRatioContains applies the Contains predicate on the "liquidationRatio" field.
func LiquidationRatioContains(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContains(FieldLiquidationRatio, v))
}

// LiquidationRatioHasPrefix applies the HasPrefix predicate on the "liquidationRatio" field.
func LiquidationRatioHasPrefix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasPrefix(FieldLiquidationRatio, v))
}

// LiquidationRatioHasSuffix applies the HasSuffix predicate on the "liquidationRatio" field.
func LiquidationRatioHasSuffix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasSuffix(FieldLiquidationRatio, v))
}

// LiquidationRatioEqualFold applies the EqualFold predicate on the "liquidationRatio" field.
func LiquidationRatioEqualFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldLiquidationRatio, v))
}

// LiquidationRatioContainsFold applies the ContainsFold predicate on the "liquidationRatio" field.
func LiquidationRatioContainsFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldLiquidationRatio, v))
}

// StabilityFeeRateEQ applies the EQ predicate on the "stabilityFeeRate" field.
func StabilityFeeRateEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldStabilityFeeRate, v))
}

// StabilityFeeRateNEQ applies the NEQ predicate on the "stabilityFeeRate" field.
func StabilityFeeRateNEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldStabilityFeeRate, v))
}

// StabilityFeeRateIn applies the In predicate on the "stabilityFeeRate" field.
func StabilityFeeRateIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldStabilityFeeRate, vs...))
}

// StabilityFeeRateNotIn applies the NotIn predicate on the "stabilityFeeRate" field.
func StabilityFeeRateNotIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldStabilityFeeRate, vs...))
}

// StabilityFeeRateGT applies the GT predicate on the "stabilityFeeRate" field.
func StabilityFeeRateGT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldStabilityFeeRate, v))
}

// StabilityFeeRateGTE applies the GTE predicate on the "stabilityFeeRate" field.
func StabilityFeeRateGTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldStabilityFeeRate, v))
}

// StabilityFeeRateLT applies the LT predicate on the "stabilityFeeRate" field.
func StabilityFeeRateLT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldStabilityFeeRate, v))
}

// StabilityFeeRateLTE applies the LTE predicate on the "stabilityFeeRate" field.
func StabilityFeeRateLTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldStabilityFeeRate, v))
}

// StabilityFeeRateContains applies the Contains predicate on the "stabilityFeeRate" field.
func StabilityFeeRateContains(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContains(FieldStabilityFeeRate, v))
}

// StabilityFeeRateHasPrefix applies the HasPrefix predicate on the "stabilityFeeRate" field.
func StabilityFeeRateHasPrefix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasPrefix(FieldStabilityFeeRate, v))
}

// StabilityFeeRateHasSuffix applies the HasSuffix predicate on the "stabilityFeeRate" field.
func StabilityFeeRateHasSuffix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasSuffix(FieldStabilityFeeRate, v))
}

// StabilityFeeRateEqualFold applies the EqualFold predicate on the "stabilityFeeRate" field.
func StabilityFeeRateEqualFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldStabilityFeeRate, v))
}

// StabilityFeeRateContainsFold applies the ContainsFold predicate on the "stabilityFeeRate" field.
func StabilityFeeRateContainsFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldStabilityFeeRate, v))
}

// TokenAdapterAddressEQ applies the EQ predicate on the "tokenAdapterAddress" field.
func TokenAdapterAddressEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldTokenAdapterAddress, v))
}

// TokenAdapterAddressNEQ applies the NEQ predicate on the "tokenAdapterAddress" field.
func TokenAdapterAddressNEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldTokenAdapterAddress, v))
}

// TokenAdapterAddressIn applies the In predicate on the "tokenAdapterAddress" field.
func TokenAdapterAddressIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldTokenAdapterAddress, vs...))
}

// TokenAdapterAddressNotIn applies the NotIn predicate on the "tokenAdapterAddress" field.
func TokenAdapterAddressNotIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldTokenAdapterAddress, vs...))
}

// TokenAdapterAddressGT applies the GT predicate on the "tokenAdapterAddress" field.
func TokenAdapterAddressGT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldTokenAdapterAddress, v))
}

// TokenAdapterAddressGTE applies the GTE predicate on the "tokenAdapterAddress" field.
func TokenAdapterAddressGTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldTokenAdapterAddress, v))
}

// TokenAdapterAddressLT applies the LT predicate on the "tokenAdapterAddress" field.
func TokenAdapterAddressLT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldTokenAdapterAddress, v))
}

// TokenAdapterAddressLTE applies the LTE predicate on the "tokenAdapterAddress" field.
func TokenAdapterAddressLTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldTokenAdapterAddress, v))
}

// TokenAdapterAddressContains applies the Contains predicate on the "tokenAdapterAddress" field.
func TokenAdapterAddressContains(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContains(FieldTokenAdapterAddress, v))
}

// TokenAdapterAddressHasPrefix applies the HasPrefix predicate on the "tokenAdapterAddress" field.
func TokenAdapterAddressHasPrefix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasPrefix(FieldTokenAdapterAddress, v))
}

// TokenAdapterAddressHasSuffix applies the HasSuffix predicate on the "tokenAdapterAddress" field.
func TokenAdapterAddressHasSuffix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasSuffix(FieldTokenAdapterAddress, v))
}

// TokenAdapterAddressEqualFold applies the EqualFold predicate on the "tokenAdapterAddress" field.
func TokenAdapterAddressEqualFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldTokenAdapterAddress, v))
}

// TokenAdapterAddressContainsFold applies the ContainsFold predicate on the "tokenAdapterAddress" field.
func TokenAdapterAddressContainsFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldTokenAdapterAddress, v))
}

// LockedCollateralEQ applies the EQ predicate on the "lockedCollateral" field.
func LockedCollateralEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldLockedCollateral, v))
}

// LockedCollateralNEQ applies the NEQ predicate on the "lockedCollateral" field.
func LockedCollateralNEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldLockedCollateral, v))
}

// LockedCollateralIn applies the In predicate on the "lockedCollateral" field.
func LockedCollateralIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldLockedCollateral, vs...))
}

// LockedCollateralNotIn applies the NotIn predicate on the "lockedCollateral" field.
func LockedCollateralNotIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldLockedCollateral, vs...))
}

// LockedCollateralGT applies the GT predicate on the "lockedCollateral" field.
func LockedCollateralGT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldLockedCollateral, v))
}

// LockedCollateralGTE applies the GTE predicate on the "lockedCollateral" field.
func LockedCollateralGTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldLockedCollateral, v))
}

// LockedCollateralLT applies the LT predicate on the "lockedCollateral" field.
func LockedCollateralLT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldLockedCollateral, v))
}

// LockedCollateralLTE applies the LTE predicate on the "lockedCollateral" field.
func LockedCollateralLTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldLockedCollateral, v))
}

// LockedCollateralContains applies the Contains predicate on the "lockedCollateral" field.
func LockedCollateralContains(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContains(FieldLockedCollateral, v))
}

// LockedCollateralHasPrefix applies the HasPrefix predicate on the "lockedCollateral" field.
func LockedCollateralHasPrefix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasPrefix(FieldLockedCollateral, v))
}

// LockedCollateralHasSuffix applies the HasSuffix predicate on the "lockedCollateral" field.
func LockedCollateralHasSuffix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasSuffix(FieldLockedCollateral, v))
}

// LockedCollateralEqualFold applies the EqualFold predicate on the "lockedCollateral" field.
func LockedCollateralEqualFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldLockedCollateral, v))
}

// LockedCollateralContainsFold applies the ContainsFold predicate on the "lockedCollateral" field.
func LockedCollateralContainsFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldLockedCollateral, v))
}

// CollateralPriceEQ applies the EQ predicate on the "collateralPrice" field.
func CollateralPriceEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldCollateralPrice, v))
}

// CollateralPriceNEQ applies the NEQ predicate on the "collateralPrice" field.
func CollateralPriceNEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldCollateralPrice, v))
}

// CollateralPriceIn applies the In predicate on the "collateralPrice" field.
func CollateralPriceIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldCollateralPrice, vs...))
}

// CollateralPriceNotIn applies the NotIn predicate on the "collateralPrice" field.
func CollateralPriceNotIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldCollateralPrice, vs...))
}

// CollateralPriceGT applies the GT predicate on the "collateralPrice" field.
func CollateralPriceGT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldCollateralPrice, v))
}

// CollateralPriceGTE applies the GTE predicate on the "collateralPrice" field.
func CollateralPriceGTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldCollateralPrice, v))
}

// CollateralPriceLT applies the LT predicate on the "collateralPrice" field.
func CollateralPriceLT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldCollateralPrice, v))
}

// CollateralPriceLTE applies the LTE predicate on the "collateralPrice" field.
func CollateralPriceLTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldCollateralPrice, v))
}

// CollateralPriceContains applies the Contains predicate on the "collateralPrice" field.
func CollateralPriceContains(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContains(FieldCollateralPrice, v))
}

// CollateralPriceHasPrefix applies the HasPrefix predicate on the "collateralPrice" field.
func CollateralPriceHasPrefix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasPrefix(FieldCollateralPrice, v))
}

// CollateralPriceHasSuffix applies the HasSuffix predicate on the "collateralPrice" field.
func CollateralPriceHasSuffix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasSuffix(FieldCollateralPrice, v))
}

// CollateralPriceEqualFold applies the EqualFold predicate on the "collateralPrice" field.
func CollateralPriceEqualFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldCollateralPrice, v))
}

// CollateralPriceContainsFold applies the ContainsFold predicate on the "collateralPrice" field.
func CollateralPriceContainsFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldCollateralPrice, v))
}

// CollateralLastPriceEQ applies the EQ predicate on the "collateralLastPrice" field.
func CollateralLastPriceEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldCollateralLastPrice, v))
}

// CollateralLastPriceNEQ applies the NEQ predicate on the "collateralLastPrice" field.
func CollateralLastPriceNEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldCollateralLastPrice, v))
}

// CollateralLastPriceIn applies the In predicate on the "collateralLastPrice" field.
func CollateralLastPriceIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldCollateralLastPrice, vs...))
}

// CollateralLastPriceNotIn applies the NotIn predicate on the "collateralLastPrice" field.
func CollateralLastPriceNotIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldCollateralLastPrice, vs...))
}

// CollateralLastPriceGT applies the GT predicate on the "collateralLastPrice" field.
func CollateralLastPriceGT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldCollateralLastPrice, v))
}

// CollateralLastPriceGTE applies the GTE predicate on the "collateralLastPrice" field.
func CollateralLastPriceGTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldCollateralLastPrice, v))
}

// CollateralLastPriceLT applies the LT predicate on the "collateralLastPrice" field.
func CollateralLastPriceLT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldCollateralLastPrice, v))
}

// CollateralLastPriceLTE applies the LTE predicate on the "collateralLastPrice" field.
func CollateralLastPriceLTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldCollateralLastPrice, v))
}

// CollateralLastPriceContains applies the Contains predicate on the "collateralLastPrice" field.
func CollateralLastPriceContains(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContains(FieldCollateralLastPrice, v))
}

// CollateralLastPriceHasPrefix applies the HasPrefix predicate on the "collateralLastPrice" field.
func CollateralLastPriceHasPrefix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasPrefix(FieldCollateralLastPrice, v))
}

// CollateralLastPriceHasSuffix applies the HasSuffix predicate on the "collateralLastPrice" field.
func CollateralLastPriceHasSuffix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasSuffix(FieldCollateralLastPrice, v))
}

// CollateralLastPriceEqualFold applies the EqualFold predicate on the "collateralLastPrice" field.
func CollateralLastPriceEqualFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldCollateralLastPrice, v))
}

// CollateralLastPriceContainsFold applies the ContainsFold predicate on the "collateralLastPrice" field.
func CollateralLastPriceContainsFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldCollateralLastPrice, v))
}

// PriceWithSafetyMarginEQ applies the EQ predicate on the "priceWithSafetyMargin" field.
func PriceWithSafetyMarginEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldPriceWithSafetyMargin, v))
}

// PriceWithSafetyMarginNEQ applies the NEQ predicate on the "priceWithSafetyMargin" field.
func PriceWithSafetyMarginNEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldPriceWithSafetyMargin, v))
}

// PriceWithSafetyMarginIn applies the In predicate on the "priceWithSafetyMargin" field.
func PriceWithSafetyMarginIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldPriceWithSafetyMargin, vs...))
}

// PriceWithSafetyMarginNotIn applies the NotIn predicate on the "priceWithSafetyMargin" field.
func PriceWithSafetyMarginNotIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldPriceWithSafetyMargin, vs...))
}

// PriceWithSafetyMarginGT applies the GT predicate on the "priceWithSafetyMargin" field.
func PriceWithSafetyMarginGT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldPriceWithSafetyMargin, v))
}

// PriceWithSafetyMarginGTE applies the GTE predicate on the "priceWithSafetyMargin" field.
func PriceWithSafetyMarginGTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldPriceWithSafetyMargin, v))
}

// PriceWithSafetyMarginLT applies the LT predicate on the "priceWithSafetyMargin" field.
func PriceWithSafetyMarginLT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldPriceWithSafetyMargin, v))
}

// PriceWithSafetyMarginLTE applies the LTE predicate on the "priceWithSafetyMargin" field.
func PriceWithSafetyMarginLTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldPriceWithSafetyMargin, v))
}

// PriceWithSafetyMarginContains applies the Contains predicate on the "priceWithSafetyMargin" field.
func PriceWithSafetyMarginContains(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContains(FieldPriceWithSafetyMargin, v))
}

// PriceWithSafetyMarginHasPrefix applies the HasPrefix predicate on the "priceWithSafetyMargin" field.
func PriceWithSafetyMarginHasPrefix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasPrefix(FieldPriceWithSafetyMargin, v))
}

// PriceWithSafetyMarginHasSuffix applies the HasSuffix predicate on the "priceWithSafetyMargin" field.
func PriceWithSafetyMarginHasSuffix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasSuffix(FieldPriceWithSafetyMargin, v))
}

// PriceWithSafetyMarginEqualFold applies the EqualFold predicate on the "priceWithSafetyMargin" field.
func PriceWithSafetyMarginEqualFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldPriceWithSafetyMargin, v))
}

// PriceWithSafetyMarginContainsFold applies the ContainsFold predicate on the "priceWithSafetyMargin" field.
func PriceWithSafetyMarginContainsFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldPriceWithSafetyMargin, v))
}

// RawPriceEQ applies the EQ predicate on the "rawPrice" field.
func RawPriceEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldRawPrice, v))
}

// RawPriceNEQ applies the NEQ predicate on the "rawPrice" field.
func RawPriceNEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldRawPrice, v))
}

// RawPriceIn applies the In predicate on the "rawPrice" field.
func RawPriceIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldRawPrice, vs...))
}

// RawPriceNotIn applies the NotIn predicate on the "rawPrice" field.
func RawPriceNotIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldRawPrice, vs...))
}

// RawPriceGT applies the GT predicate on the "rawPrice" field.
func RawPriceGT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldRawPrice, v))
}

// RawPriceGTE applies the GTE predicate on the "rawPrice" field.
func RawPriceGTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldRawPrice, v))
}

// RawPriceLT applies the LT predicate on the "rawPrice" field.
func RawPriceLT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldRawPrice, v))
}

// RawPriceLTE applies the LTE predicate on the "rawPrice" field.
func RawPriceLTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldRawPrice, v))
}

// RawPriceContains applies the Contains predicate on the "rawPrice" field.
func RawPriceContains(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContains(FieldRawPrice, v))
}

// RawPriceHasPrefix applies the HasPrefix predicate on the "rawPrice" field.
func RawPriceHasPrefix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasPrefix(FieldRawPrice, v))
}

// RawPriceHasSuffix applies the HasSuffix predicate on the "rawPrice" field.
func RawPriceHasSuffix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasSuffix(FieldRawPrice, v))
}

// RawPriceEqualFold applies the EqualFold predicate on the "rawPrice" field.
func RawPriceEqualFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldRawPrice, v))
}

// RawPriceContainsFold applies the ContainsFold predicate on the "rawPrice" field.
func RawPriceContainsFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldRawPrice, v))
}

// DebtAccumulatedRateEQ applies the EQ predicate on the "debtAccumulatedRate" field.
func DebtAccumulatedRateEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldDebtAccumulatedRate, v))
}

// DebtAccumulatedRateNEQ applies the NEQ predicate on the "debtAccumulatedRate" field.
func DebtAccumulatedRateNEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldDebtAccumulatedRate, v))
}

// DebtAccumulatedRateIn applies the In predicate on the "debtAccumulatedRate" field.
func DebtAccumulatedRateIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldDebtAccumulatedRate, vs...))
}

// DebtAccumulatedRateNotIn applies the NotIn predicate on the "debtAccumulatedRate" field.
func DebtAccumulatedRateNotIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldDebtAccumulatedRate, vs...))
}

// DebtAccumulatedRateGT applies the GT predicate on the "debtAccumulatedRate" field.
func DebtAccumulatedRateGT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldDebtAccumulatedRate, v))
}

// DebtAccumulatedRateGTE applies the GTE predicate on the "debtAccumulatedRate" field.
func DebtAccumulatedRateGTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldDebtAccumulatedRate, v))
}

// DebtAccumulatedRateLT applies the LT predicate on the "debtAccumulatedRate" field.
func DebtAccumulatedRateLT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldDebtAccumulatedRate, v))
}

// DebtAccumulatedRateLTE applies the LTE predicate on the "debtAccumulatedRate" field.
func DebtAccumulatedRateLTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldDebtAccumulatedRate, v))
}

// DebtAccumulatedRateContains applies the Contains predicate on the "debtAccumulatedRate" field.
func DebtAccumulatedRateContains(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContains(FieldDebtAccumulatedRate, v))
}

// DebtAccumulatedRateHasPrefix applies the HasPrefix predicate on the "debtAccumulatedRate" field.
func DebtAccumulatedRateHasPrefix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasPrefix(FieldDebtAccumulatedRate, v))
}

// DebtAccumulatedRateHasSuffix applies the HasSuffix predicate on the "debtAccumulatedRate" field.
func DebtAccumulatedRateHasSuffix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasSuffix(FieldDebtAccumulatedRate, v))
}

// DebtAccumulatedRateEqualFold applies the EqualFold predicate on the "debtAccumulatedRate" field.
func DebtAccumulatedRateEqualFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldDebtAccumulatedRate, v))
}

// DebtAccumulatedRateContainsFold applies the ContainsFold predicate on the "debtAccumulatedRate" field.
func DebtAccumulatedRateContainsFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldDebtAccumulatedRate, v))
}

// TotalBorrowedEQ applies the EQ predicate on the "totalBorrowed" field.
func TotalBorrowedEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldTotalBorrowed, v))
}

// TotalBorrowedNEQ applies the NEQ predicate on the "totalBorrowed" field.
func TotalBorrowedNEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldTotalBorrowed, v))
}

// TotalBorrowedIn applies the In predicate on the "totalBorrowed" field.
func TotalBorrowedIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldTotalBorrowed, vs...))
}

// TotalBorrowedNotIn applies the NotIn predicate on the "totalBorrowed" field.
func TotalBorrowedNotIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldTotalBorrowed, vs...))
}

// TotalBorrowedGT applies the GT predicate on the "totalBorrowed" field.
func TotalBorrowedGT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldTotalBorrowed, v))
}

// TotalBorrowedGTE applies the GTE predicate on the "totalBorrowed" field.
func TotalBorrowedGTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldTotalBorrowed, v))
}

// TotalBorrowedLT applies the LT predicate on the "totalBorrowed" field.
func TotalBorrowedLT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldTotalBorrowed, v))
}

// TotalBorrowedLTE applies the LTE predicate on the "totalBorrowed" field.
func TotalBorrowedLTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldTotalBorrowed, v))
}

// TotalBorrowedContains applies the Contains predicate on the "totalBorrowed" field.
func TotalBorrowedContains(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContains(FieldTotalBorrowed, v))
}

// TotalBorrowedHasPrefix applies the HasPrefix predicate on the "totalBorrowed" field.
func TotalBorrowedHasPrefix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasPrefix(FieldTotalBorrowed, v))
}

// TotalBorrowedHasSuffix applies the HasSuffix predicate on the "totalBorrowed" field.
func TotalBorrowedHasSuffix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasSuffix(FieldTotalBorrowed, v))
}

// TotalBorrowedEqualFold applies the EqualFold predicate on the "totalBorrowed" field.
func TotalBorrowedEqualFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldTotalBorrowed, v))
}

// TotalBorrowedContainsFold applies the ContainsFold predicate on the "totalBorrowed" field.
func TotalBorrowedContainsFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldTotalBorrowed, v))
}

// TotalAvailableEQ applies the EQ predicate on the "totalAvailable" field.
func TotalAvailableEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldTotalAvailable, v))
}

// TotalAvailableNEQ applies the NEQ predicate on the "totalAvailable" field.
func TotalAvailableNEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldTotalAvailable, v))
}

// TotalAvailableIn applies the In predicate on the "totalAvailable" field.
func TotalAvailableIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldTotalAvailable, vs...))
}

// TotalAvailableNotIn applies the NotIn predicate on the "totalAvailable" field.
func TotalAvailableNotIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldTotalAvailable, vs...))
}

// TotalAvailableGT applies the GT predicate on the "totalAvailable" field.
func TotalAvailableGT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldTotalAvailable, v))
}

// TotalAvailableGTE applies the GTE predicate on the "totalAvailable" field.
func TotalAvailableGTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldTotalAvailable, v))
}

// TotalAvailableLT applies the LT predicate on the "totalAvailable" field.
func TotalAvailableLT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldTotalAvailable, v))
}

// TotalAvailableLTE applies the LTE predicate on the "totalAvailable" field.
func TotalAvailableLTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldTotalAvailable, v))
}

// TotalAvailableContains applies the Contains predicate on the "totalAvailable" field.
func TotalAvailableContains(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContains(FieldTotalAvailable, v))
}

// TotalAvailableHasPrefix applies the HasPrefix predicate on the "totalAvailable" field.
func TotalAvailableHasPrefix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasPrefix(FieldTotalAvailable, v))
}

// TotalAvailableHasSuffix applies the HasSuffix predicate on the "totalAvailable" field.
func TotalAvailableHasSuffix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasSuffix(FieldTotalAvailable, v))
}

// TotalAvailableEqualFold applies the EqualFold predicate on the "totalAvailable" field.
func TotalAvailableEqualFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldTotalAvailable, v))
}

// TotalAvailableContainsFold applies the ContainsFold predicate on the "totalAvailable" field.
func TotalAvailableContainsFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldTotalAvailable, v))
}

// TvlEQ applies the EQ predicate on the "tvl" field.
func TvlEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEQ(FieldTvl, v))
}

// TvlNEQ applies the NEQ predicate on the "tvl" field.
func TvlNEQ(v string) predicate.Pool {
	return predicate.Pool(sql.FieldNEQ(FieldTvl, v))
}

// TvlIn applies the In predicate on the "tvl" field.
func TvlIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldIn(FieldTvl, vs...))
}

// TvlNotIn applies the NotIn predicate on the "tvl" field.
func TvlNotIn(vs ...string) predicate.Pool {
	return predicate.Pool(sql.FieldNotIn(FieldTvl, vs...))
}

// TvlGT applies the GT predicate on the "tvl" field.
func TvlGT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGT(FieldTvl, v))
}

// TvlGTE applies the GTE predicate on the "tvl" field.
func TvlGTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldGTE(FieldTvl, v))
}

// TvlLT applies the LT predicate on the "tvl" field.
func TvlLT(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLT(FieldTvl, v))
}

// TvlLTE applies the LTE predicate on the "tvl" field.
func TvlLTE(v string) predicate.Pool {
	return predicate.Pool(sql.FieldLTE(FieldTvl, v))
}

// TvlContains applies the Contains predicate on the "tvl" field.
func TvlContains(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContains(FieldTvl, v))
}

// TvlHasPrefix applies the HasPrefix predicate on the "tvl" field.
func TvlHasPrefix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasPrefix(FieldTvl, v))
}

// TvlHasSuffix applies the HasSuffix predicate on the "tvl" field.
func TvlHasSuffix(v string) predicate.Pool {
	return predicate.Pool(sql.FieldHasSuffix(FieldTvl, v))
}

// TvlEqualFold applies the EqualFold predicate on the "tvl" field.
func TvlEqualFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldEqualFold(FieldTvl, v))
}

// TvlContainsFold applies the ContainsFold predicate on the "tvl" field.
func TvlContainsFold(v string) predicate.Pool {
	return predicate.Pool(sql.FieldContainsFold(FieldTvl, v))
}

// HasPositions applies the HasEdge predicate on the "positions" edge.
func HasPositions() predicate.Pool {
	return predicate.Pool(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, PositionsTable, PositionsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPositionsWith applies the HasEdge predicate on the "positions" edge with a given conditions (other predicates).
func HasPositionsWith(preds ...predicate.Position) predicate.Pool {
	return predicate.Pool(func(s *sql.Selector) {
		step := newPositionsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Pool) predicate.Pool {
	return predicate.Pool(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Pool) predicate.Pool {
	return predicate.Pool(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Pool) predicate.Pool {
	return predicate.Pool(sql.NotPredicates(p))
}
