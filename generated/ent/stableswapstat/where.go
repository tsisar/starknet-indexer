// Code generated by ent, DO NOT EDIT.

package stableswapstat

import (
	"entgo.io/ent/dialect/sql"
	"github.com/tsisar/starknet-indexer/generated/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldContainsFold(FieldID, id))
}

// TotalTokenToStablecoinSwapEvents applies equality check predicate on the "totalTokenToStablecoinSwapEvents" field. It's identical to TotalTokenToStablecoinSwapEventsEQ.
func TotalTokenToStablecoinSwapEvents(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEQ(FieldTotalTokenToStablecoinSwapEvents, v))
}

// TotalStablecoinToTokenSwapEvents applies equality check predicate on the "totalStablecoinToTokenSwapEvents" field. It's identical to TotalStablecoinToTokenSwapEventsEQ.
func TotalStablecoinToTokenSwapEvents(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEQ(FieldTotalStablecoinToTokenSwapEvents, v))
}

// RemainingDailySwapAmount applies equality check predicate on the "remainingDailySwapAmount" field. It's identical to RemainingDailySwapAmountEQ.
func RemainingDailySwapAmount(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEQ(FieldRemainingDailySwapAmount, v))
}

// TokenToStablecoinTotalSwapValue applies equality check predicate on the "tokenToStablecoinTotalSwapValue" field. It's identical to TokenToStablecoinTotalSwapValueEQ.
func TokenToStablecoinTotalSwapValue(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEQ(FieldTokenToStablecoinTotalSwapValue, v))
}

// StablecoinToTokenTotalSwapValue applies equality check predicate on the "stablecoinToTokenTotalSwapValue" field. It's identical to StablecoinToTokenTotalSwapValueEQ.
func StablecoinToTokenTotalSwapValue(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEQ(FieldStablecoinToTokenTotalSwapValue, v))
}

// TotalTokenToStablecoinSwapEventsEQ applies the EQ predicate on the "totalTokenToStablecoinSwapEvents" field.
func TotalTokenToStablecoinSwapEventsEQ(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEQ(FieldTotalTokenToStablecoinSwapEvents, v))
}

// TotalTokenToStablecoinSwapEventsNEQ applies the NEQ predicate on the "totalTokenToStablecoinSwapEvents" field.
func TotalTokenToStablecoinSwapEventsNEQ(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldNEQ(FieldTotalTokenToStablecoinSwapEvents, v))
}

// TotalTokenToStablecoinSwapEventsIn applies the In predicate on the "totalTokenToStablecoinSwapEvents" field.
func TotalTokenToStablecoinSwapEventsIn(vs ...string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldIn(FieldTotalTokenToStablecoinSwapEvents, vs...))
}

// TotalTokenToStablecoinSwapEventsNotIn applies the NotIn predicate on the "totalTokenToStablecoinSwapEvents" field.
func TotalTokenToStablecoinSwapEventsNotIn(vs ...string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldNotIn(FieldTotalTokenToStablecoinSwapEvents, vs...))
}

// TotalTokenToStablecoinSwapEventsGT applies the GT predicate on the "totalTokenToStablecoinSwapEvents" field.
func TotalTokenToStablecoinSwapEventsGT(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldGT(FieldTotalTokenToStablecoinSwapEvents, v))
}

// TotalTokenToStablecoinSwapEventsGTE applies the GTE predicate on the "totalTokenToStablecoinSwapEvents" field.
func TotalTokenToStablecoinSwapEventsGTE(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldGTE(FieldTotalTokenToStablecoinSwapEvents, v))
}

// TotalTokenToStablecoinSwapEventsLT applies the LT predicate on the "totalTokenToStablecoinSwapEvents" field.
func TotalTokenToStablecoinSwapEventsLT(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldLT(FieldTotalTokenToStablecoinSwapEvents, v))
}

// TotalTokenToStablecoinSwapEventsLTE applies the LTE predicate on the "totalTokenToStablecoinSwapEvents" field.
func TotalTokenToStablecoinSwapEventsLTE(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldLTE(FieldTotalTokenToStablecoinSwapEvents, v))
}

// TotalTokenToStablecoinSwapEventsContains applies the Contains predicate on the "totalTokenToStablecoinSwapEvents" field.
func TotalTokenToStablecoinSwapEventsContains(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldContains(FieldTotalTokenToStablecoinSwapEvents, v))
}

// TotalTokenToStablecoinSwapEventsHasPrefix applies the HasPrefix predicate on the "totalTokenToStablecoinSwapEvents" field.
func TotalTokenToStablecoinSwapEventsHasPrefix(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldHasPrefix(FieldTotalTokenToStablecoinSwapEvents, v))
}

// TotalTokenToStablecoinSwapEventsHasSuffix applies the HasSuffix predicate on the "totalTokenToStablecoinSwapEvents" field.
func TotalTokenToStablecoinSwapEventsHasSuffix(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldHasSuffix(FieldTotalTokenToStablecoinSwapEvents, v))
}

// TotalTokenToStablecoinSwapEventsEqualFold applies the EqualFold predicate on the "totalTokenToStablecoinSwapEvents" field.
func TotalTokenToStablecoinSwapEventsEqualFold(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEqualFold(FieldTotalTokenToStablecoinSwapEvents, v))
}

// TotalTokenToStablecoinSwapEventsContainsFold applies the ContainsFold predicate on the "totalTokenToStablecoinSwapEvents" field.
func TotalTokenToStablecoinSwapEventsContainsFold(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldContainsFold(FieldTotalTokenToStablecoinSwapEvents, v))
}

// TotalStablecoinToTokenSwapEventsEQ applies the EQ predicate on the "totalStablecoinToTokenSwapEvents" field.
func TotalStablecoinToTokenSwapEventsEQ(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEQ(FieldTotalStablecoinToTokenSwapEvents, v))
}

// TotalStablecoinToTokenSwapEventsNEQ applies the NEQ predicate on the "totalStablecoinToTokenSwapEvents" field.
func TotalStablecoinToTokenSwapEventsNEQ(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldNEQ(FieldTotalStablecoinToTokenSwapEvents, v))
}

// TotalStablecoinToTokenSwapEventsIn applies the In predicate on the "totalStablecoinToTokenSwapEvents" field.
func TotalStablecoinToTokenSwapEventsIn(vs ...string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldIn(FieldTotalStablecoinToTokenSwapEvents, vs...))
}

// TotalStablecoinToTokenSwapEventsNotIn applies the NotIn predicate on the "totalStablecoinToTokenSwapEvents" field.
func TotalStablecoinToTokenSwapEventsNotIn(vs ...string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldNotIn(FieldTotalStablecoinToTokenSwapEvents, vs...))
}

// TotalStablecoinToTokenSwapEventsGT applies the GT predicate on the "totalStablecoinToTokenSwapEvents" field.
func TotalStablecoinToTokenSwapEventsGT(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldGT(FieldTotalStablecoinToTokenSwapEvents, v))
}

// TotalStablecoinToTokenSwapEventsGTE applies the GTE predicate on the "totalStablecoinToTokenSwapEvents" field.
func TotalStablecoinToTokenSwapEventsGTE(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldGTE(FieldTotalStablecoinToTokenSwapEvents, v))
}

// TotalStablecoinToTokenSwapEventsLT applies the LT predicate on the "totalStablecoinToTokenSwapEvents" field.
func TotalStablecoinToTokenSwapEventsLT(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldLT(FieldTotalStablecoinToTokenSwapEvents, v))
}

// TotalStablecoinToTokenSwapEventsLTE applies the LTE predicate on the "totalStablecoinToTokenSwapEvents" field.
func TotalStablecoinToTokenSwapEventsLTE(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldLTE(FieldTotalStablecoinToTokenSwapEvents, v))
}

// TotalStablecoinToTokenSwapEventsContains applies the Contains predicate on the "totalStablecoinToTokenSwapEvents" field.
func TotalStablecoinToTokenSwapEventsContains(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldContains(FieldTotalStablecoinToTokenSwapEvents, v))
}

// TotalStablecoinToTokenSwapEventsHasPrefix applies the HasPrefix predicate on the "totalStablecoinToTokenSwapEvents" field.
func TotalStablecoinToTokenSwapEventsHasPrefix(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldHasPrefix(FieldTotalStablecoinToTokenSwapEvents, v))
}

// TotalStablecoinToTokenSwapEventsHasSuffix applies the HasSuffix predicate on the "totalStablecoinToTokenSwapEvents" field.
func TotalStablecoinToTokenSwapEventsHasSuffix(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldHasSuffix(FieldTotalStablecoinToTokenSwapEvents, v))
}

// TotalStablecoinToTokenSwapEventsEqualFold applies the EqualFold predicate on the "totalStablecoinToTokenSwapEvents" field.
func TotalStablecoinToTokenSwapEventsEqualFold(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEqualFold(FieldTotalStablecoinToTokenSwapEvents, v))
}

// TotalStablecoinToTokenSwapEventsContainsFold applies the ContainsFold predicate on the "totalStablecoinToTokenSwapEvents" field.
func TotalStablecoinToTokenSwapEventsContainsFold(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldContainsFold(FieldTotalStablecoinToTokenSwapEvents, v))
}

// RemainingDailySwapAmountEQ applies the EQ predicate on the "remainingDailySwapAmount" field.
func RemainingDailySwapAmountEQ(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEQ(FieldRemainingDailySwapAmount, v))
}

// RemainingDailySwapAmountNEQ applies the NEQ predicate on the "remainingDailySwapAmount" field.
func RemainingDailySwapAmountNEQ(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldNEQ(FieldRemainingDailySwapAmount, v))
}

// RemainingDailySwapAmountIn applies the In predicate on the "remainingDailySwapAmount" field.
func RemainingDailySwapAmountIn(vs ...string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldIn(FieldRemainingDailySwapAmount, vs...))
}

// RemainingDailySwapAmountNotIn applies the NotIn predicate on the "remainingDailySwapAmount" field.
func RemainingDailySwapAmountNotIn(vs ...string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldNotIn(FieldRemainingDailySwapAmount, vs...))
}

// RemainingDailySwapAmountGT applies the GT predicate on the "remainingDailySwapAmount" field.
func RemainingDailySwapAmountGT(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldGT(FieldRemainingDailySwapAmount, v))
}

// RemainingDailySwapAmountGTE applies the GTE predicate on the "remainingDailySwapAmount" field.
func RemainingDailySwapAmountGTE(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldGTE(FieldRemainingDailySwapAmount, v))
}

// RemainingDailySwapAmountLT applies the LT predicate on the "remainingDailySwapAmount" field.
func RemainingDailySwapAmountLT(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldLT(FieldRemainingDailySwapAmount, v))
}

// RemainingDailySwapAmountLTE applies the LTE predicate on the "remainingDailySwapAmount" field.
func RemainingDailySwapAmountLTE(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldLTE(FieldRemainingDailySwapAmount, v))
}

// RemainingDailySwapAmountContains applies the Contains predicate on the "remainingDailySwapAmount" field.
func RemainingDailySwapAmountContains(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldContains(FieldRemainingDailySwapAmount, v))
}

// RemainingDailySwapAmountHasPrefix applies the HasPrefix predicate on the "remainingDailySwapAmount" field.
func RemainingDailySwapAmountHasPrefix(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldHasPrefix(FieldRemainingDailySwapAmount, v))
}

// RemainingDailySwapAmountHasSuffix applies the HasSuffix predicate on the "remainingDailySwapAmount" field.
func RemainingDailySwapAmountHasSuffix(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldHasSuffix(FieldRemainingDailySwapAmount, v))
}

// RemainingDailySwapAmountEqualFold applies the EqualFold predicate on the "remainingDailySwapAmount" field.
func RemainingDailySwapAmountEqualFold(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEqualFold(FieldRemainingDailySwapAmount, v))
}

// RemainingDailySwapAmountContainsFold applies the ContainsFold predicate on the "remainingDailySwapAmount" field.
func RemainingDailySwapAmountContainsFold(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldContainsFold(FieldRemainingDailySwapAmount, v))
}

// TokenToStablecoinTotalSwapValueEQ applies the EQ predicate on the "tokenToStablecoinTotalSwapValue" field.
func TokenToStablecoinTotalSwapValueEQ(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEQ(FieldTokenToStablecoinTotalSwapValue, v))
}

// TokenToStablecoinTotalSwapValueNEQ applies the NEQ predicate on the "tokenToStablecoinTotalSwapValue" field.
func TokenToStablecoinTotalSwapValueNEQ(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldNEQ(FieldTokenToStablecoinTotalSwapValue, v))
}

// TokenToStablecoinTotalSwapValueIn applies the In predicate on the "tokenToStablecoinTotalSwapValue" field.
func TokenToStablecoinTotalSwapValueIn(vs ...string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldIn(FieldTokenToStablecoinTotalSwapValue, vs...))
}

// TokenToStablecoinTotalSwapValueNotIn applies the NotIn predicate on the "tokenToStablecoinTotalSwapValue" field.
func TokenToStablecoinTotalSwapValueNotIn(vs ...string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldNotIn(FieldTokenToStablecoinTotalSwapValue, vs...))
}

// TokenToStablecoinTotalSwapValueGT applies the GT predicate on the "tokenToStablecoinTotalSwapValue" field.
func TokenToStablecoinTotalSwapValueGT(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldGT(FieldTokenToStablecoinTotalSwapValue, v))
}

// TokenToStablecoinTotalSwapValueGTE applies the GTE predicate on the "tokenToStablecoinTotalSwapValue" field.
func TokenToStablecoinTotalSwapValueGTE(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldGTE(FieldTokenToStablecoinTotalSwapValue, v))
}

// TokenToStablecoinTotalSwapValueLT applies the LT predicate on the "tokenToStablecoinTotalSwapValue" field.
func TokenToStablecoinTotalSwapValueLT(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldLT(FieldTokenToStablecoinTotalSwapValue, v))
}

// TokenToStablecoinTotalSwapValueLTE applies the LTE predicate on the "tokenToStablecoinTotalSwapValue" field.
func TokenToStablecoinTotalSwapValueLTE(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldLTE(FieldTokenToStablecoinTotalSwapValue, v))
}

// TokenToStablecoinTotalSwapValueContains applies the Contains predicate on the "tokenToStablecoinTotalSwapValue" field.
func TokenToStablecoinTotalSwapValueContains(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldContains(FieldTokenToStablecoinTotalSwapValue, v))
}

// TokenToStablecoinTotalSwapValueHasPrefix applies the HasPrefix predicate on the "tokenToStablecoinTotalSwapValue" field.
func TokenToStablecoinTotalSwapValueHasPrefix(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldHasPrefix(FieldTokenToStablecoinTotalSwapValue, v))
}

// TokenToStablecoinTotalSwapValueHasSuffix applies the HasSuffix predicate on the "tokenToStablecoinTotalSwapValue" field.
func TokenToStablecoinTotalSwapValueHasSuffix(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldHasSuffix(FieldTokenToStablecoinTotalSwapValue, v))
}

// TokenToStablecoinTotalSwapValueEqualFold applies the EqualFold predicate on the "tokenToStablecoinTotalSwapValue" field.
func TokenToStablecoinTotalSwapValueEqualFold(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEqualFold(FieldTokenToStablecoinTotalSwapValue, v))
}

// TokenToStablecoinTotalSwapValueContainsFold applies the ContainsFold predicate on the "tokenToStablecoinTotalSwapValue" field.
func TokenToStablecoinTotalSwapValueContainsFold(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldContainsFold(FieldTokenToStablecoinTotalSwapValue, v))
}

// StablecoinToTokenTotalSwapValueEQ applies the EQ predicate on the "stablecoinToTokenTotalSwapValue" field.
func StablecoinToTokenTotalSwapValueEQ(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEQ(FieldStablecoinToTokenTotalSwapValue, v))
}

// StablecoinToTokenTotalSwapValueNEQ applies the NEQ predicate on the "stablecoinToTokenTotalSwapValue" field.
func StablecoinToTokenTotalSwapValueNEQ(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldNEQ(FieldStablecoinToTokenTotalSwapValue, v))
}

// StablecoinToTokenTotalSwapValueIn applies the In predicate on the "stablecoinToTokenTotalSwapValue" field.
func StablecoinToTokenTotalSwapValueIn(vs ...string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldIn(FieldStablecoinToTokenTotalSwapValue, vs...))
}

// StablecoinToTokenTotalSwapValueNotIn applies the NotIn predicate on the "stablecoinToTokenTotalSwapValue" field.
func StablecoinToTokenTotalSwapValueNotIn(vs ...string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldNotIn(FieldStablecoinToTokenTotalSwapValue, vs...))
}

// StablecoinToTokenTotalSwapValueGT applies the GT predicate on the "stablecoinToTokenTotalSwapValue" field.
func StablecoinToTokenTotalSwapValueGT(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldGT(FieldStablecoinToTokenTotalSwapValue, v))
}

// StablecoinToTokenTotalSwapValueGTE applies the GTE predicate on the "stablecoinToTokenTotalSwapValue" field.
func StablecoinToTokenTotalSwapValueGTE(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldGTE(FieldStablecoinToTokenTotalSwapValue, v))
}

// StablecoinToTokenTotalSwapValueLT applies the LT predicate on the "stablecoinToTokenTotalSwapValue" field.
func StablecoinToTokenTotalSwapValueLT(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldLT(FieldStablecoinToTokenTotalSwapValue, v))
}

// StablecoinToTokenTotalSwapValueLTE applies the LTE predicate on the "stablecoinToTokenTotalSwapValue" field.
func StablecoinToTokenTotalSwapValueLTE(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldLTE(FieldStablecoinToTokenTotalSwapValue, v))
}

// StablecoinToTokenTotalSwapValueContains applies the Contains predicate on the "stablecoinToTokenTotalSwapValue" field.
func StablecoinToTokenTotalSwapValueContains(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldContains(FieldStablecoinToTokenTotalSwapValue, v))
}

// StablecoinToTokenTotalSwapValueHasPrefix applies the HasPrefix predicate on the "stablecoinToTokenTotalSwapValue" field.
func StablecoinToTokenTotalSwapValueHasPrefix(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldHasPrefix(FieldStablecoinToTokenTotalSwapValue, v))
}

// StablecoinToTokenTotalSwapValueHasSuffix applies the HasSuffix predicate on the "stablecoinToTokenTotalSwapValue" field.
func StablecoinToTokenTotalSwapValueHasSuffix(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldHasSuffix(FieldStablecoinToTokenTotalSwapValue, v))
}

// StablecoinToTokenTotalSwapValueEqualFold applies the EqualFold predicate on the "stablecoinToTokenTotalSwapValue" field.
func StablecoinToTokenTotalSwapValueEqualFold(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldEqualFold(FieldStablecoinToTokenTotalSwapValue, v))
}

// StablecoinToTokenTotalSwapValueContainsFold applies the ContainsFold predicate on the "stablecoinToTokenTotalSwapValue" field.
func StablecoinToTokenTotalSwapValueContainsFold(v string) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.FieldContainsFold(FieldStablecoinToTokenTotalSwapValue, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.StableSwapStat) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.StableSwapStat) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.StableSwapStat) predicate.StableSwapStat {
	return predicate.StableSwapStat(sql.NotPredicates(p))
}
